// Loading idle process from disk
loadi (69, 11);
loadi (70, 12);

// INIT file
loadi (65, 7);
loadi (66, 8);

// Library code
loadi (63, 13);
loadi (64, 14);

// Exception handler
loadi (2, 15);
loadi (3, 16);

// Timer interrupt routine
loadi (4, 17);
loadi (5, 18);

// INT 10
loadi (22, 35);
loadi (23, 36);

// Loading INT 7 from disk to memory
loadi (16, 29);
loadi (17, 30);

// IDLE PROCESS ENTRIES

PTBR = PAGE_TABLE_BASE;   // PID of idle process is 0
PTLR = 10;

// Library (It doesn't use)
[PTBR+0] = -1;
[PTBR+1] = "0000";
[PTBR+2] = -1;
[PTBR+3] = "0000";

// Heap (It doesn't use)
[PTBR+4] = -1;
[PTBR+5] = "0000";
[PTBR+6] = -1;
[PTBR+7] = "0000";

// Code
[PTBR+8] = 69;
[PTBR+9] = "0100";
[PTBR+10] = 70;
[PTBR+11] = "0100";
[PTBR+12] = -1;
[PTBR+13] = "0000";
[PTBR+14] = -1;
[PTBR+15] = "0000";

// Stack (Only one page for stack)
// Page 81 for stack as 76-80 used by INIT code
[PTBR+16] = 81;
[PTBR+17] = "0110";
[PTBR+18] = -1;
[PTBR+19] = "0000";

// Process Table + Status System Table for IDLE process
[PROCESS_TABLE + 1] = 0;               // PID of IDLE
[PROCESS_TABLE + 4] = CREATED;         // Process has not been scheduled for execution previously
[PROCESS_TABLE + 11] = 82;             // User Area Page for IDLE
[PROCESS_TABLE + 12] = 0;              // KPTR
[PROCESS_TABLE + 13] = 8*512;          // UPTR
[PROCESS_TABLE + 14] = PTBR;
[PROCESS_TABLE + 15] = PTLR;

[SYSTEM_STATUS_TABLE + 1] = 0;

[81 * 512] = [69*512 + 1];         // Setting IP to the top of user stack

// INIT PROCESS ENTRIES

PTBR = PAGE_TABLE_BASE + 20;   
PTLR = 10;

// Library
[PTBR+0] = 63;
[PTBR+1] = "0100";
[PTBR+2] = 64;
[PTBR+3] = "0100";

// Heap
[PTBR+4] = 78;
[PTBR+5] = "0110";
[PTBR+6] = 79;
[PTBR+7] = "0110";

// Code
[PTBR+8] = 65;
[PTBR+9] = "0100";
[PTBR+10] = 66;
[PTBR+11] = "0100";
[PTBR+12] = -1;
[PTBR+13] = "0000";
[PTBR+14] = -1;
[PTBR+15] = "0000";

// Stack
[PTBR+16] = 76;
[PTBR+17] = "0110";
[PTBR+18] = 77;
[PTBR+19] = "0110";

// Process table for INIT starts from PT + 16
[PROCESS_TABLE + 16 + 1] = 1;             // PID
[PROCESS_TABLE + 16 + 4] = RUNNING;       // INIT is scheduled first
[PROCESS_TABLE + 16 + 11] = 80;           // User Area Page
[PROCESS_TABLE + 16 + 12] = 0;            // KPTR
[PROCESS_TABLE + 16 + 13] = 8*512;        // UPTR
[PROCESS_TABLE + 16 + 14] = PAGE_TABLE_BASE + 20;
[PROCESS_TABLE + 16 + 15] = 10;

// Setting PID in System Status Table
[SYSTEM_STATUS_TABLE + 1] = 1;

[76*512] = [65*512 + 1];
SP = 8*512;
ireturn;
