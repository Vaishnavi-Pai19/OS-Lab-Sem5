// INIT program in blocks 7-8
loadi (65, 7);
loadi (66, 8);

// INT 10 in blocks 35-36
loadi (22, 35);
loadi (23, 36);

// Exception handler in blocks 15-16
loadi (2, 15);
loadi (3, 16);

PTBR = PAGE_TABLE_BASE;
PTLR = 9;    // Since we need logical pages till 8

[PTBR+0] = -1;
[PTBR+1] = "0000";
[PTBR+2] = -1;
[PTBR+3] = "0000";
[PTBR+4] = -1;
[PTBR+5] = "0000";
[PTBR+6] = -1;
[PTBR+7] = "0000";

// Logical page starts at 8th word since each entry is of 2 words
[PTBR+8] = 65;
[PTBR+9] = "0100";
[PTBR+10] = 66;
[PTBR+11] = "0100";

[PTBR+12] = -1;
[PTBR+13] = "0000";
[PTBR+14] = -1;
[PTBR+15] = "0000";

// Stack at logical page 8 ie. 16th word
[PTBR+16] = 76;
[PTBR+17] = "0110";

// Starting address of code is now 2048 instead of 0
[76*512] = 2048;

// SP should point to logical page 8 instead of 2
SP = 8*512;

ireturn;
